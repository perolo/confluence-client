package client

//ConfluenceSpace stores the space information
type ConfluenceSpace struct {
	ID   int64  `json:"id,omitempty"`
	Key  string `json:"key,omitempty"`
	Name string `json:"name,omitempty"`
}

//ConfluencePageBodyStorage holds the storage objects of the body
type ConfluencePageBodyStorage struct {
	Value          string `json:"value,omitempty"`
	Representation string `json:"representation,omitempty"`
}

//ConfluencePageBody holds the page contents itself
type ConfluencePageBodyView struct {
	Value string `json:"value,omitempty"`
}

//ConfluencePageBody holds the page contents itself
type ConfluencePageBody struct {
	Storage *ConfluencePageBodyStorage `json:"storage,omitempty"`
	View    *ConfluencePageBodyView    `json:"view,omitempty"`
}

//ConfluencePageVersion holds the version information for a page
type ConfluencePageVersion struct {
	Number int64 `json:"number,omitempty"`
}

//ConfluencePageAncestor holds the ID of a specific ancestor to a confluence page
type ConfluencePageAncestor struct {
	ID int64 `json:"id,omitempty"`
}

type ConfluencePageAncestor2 struct {
	ID         string `json:"id,omitempty"`
	Type       string `json:"type,omitempty"`
	Status     string `json:"status,omitempty"`
	Title      string `json:"title,omitempty"`
	Extensions struct {
		Position string `json:"position,omitempty"`
	} `json:"extensions,omitempty"`
	Links struct {
		Webui  string `json:"webui,omitempty"`
		Edit   string `json:"edit,omitempty"`
		Tinyui string `json:"tinyui,omitempty"`
		Self   string `json:"self,omitempty"`
	} `json:"_links,omitempty"`
	Expandable struct {
		Container    string `json:"container,omitempty"`
		Metadata     string `json:"metadata,omitempty"`
		Operations   string `json:"operations,omitempty"`
		Children     string `json:"children,omitempty"`
		Restrictions string `json:"restrictions,omitempty"`
		History      string `json:"history,omitempty"`
		Ancestors    string `json:"ancestors,omitempty"`
		Body         string `json:"body,omitempty"`
		Version      string `json:"version,omitempty"`
		Descendants  string `json:"descendants,omitempty"`
		Space        string `json:"space,omitempty"`
	} `json:"_expandable,omitempty"`
}

//ConfluencePage stores the base page object
type ConfluencePage struct {
	Title     string                   `json:"title,omitempty"`
	Type      string                   `json:"type,omitempty"`
	ID        string                   `json:"id,omitempty"`
	Status    string                   `json:"status,omitempty"`
	Ancestors []ConfluencePageAncestor `json:"ancestors,omitempty"`
	Space     *ConfluenceSpace         `json:"space,omitempty"`
	Body      *ConfluencePageBody      `json:"body,omitempty"`
	Version   *ConfluencePageVersion   `json:"version,omitempty"`
	MetaData  *Metadata                `json:"metadata,omitempty"`
}

type ConfluencePage2 struct {
	Title     string                   `json:"title,omitempty"`
	Type      string                   `json:"type,omitempty"`
	ID        string                   `json:"id,omitempty"`
	Status    string                   `json:"status,omitempty"`
	Ancestors []ConfluencePageAncestor2 `json:"ancestors,omitempty"`
	Space     *ConfluenceSpace         `json:"space,omitempty"`
	Body      *ConfluencePageBody      `json:"body,omitempty"`
	Version   *ConfluencePageVersion   `json:"version,omitempty"`
	MetaData  *Metadata                `json:"metadata,omitempty"`
}

type Metadata struct {
	Labels struct {
		Results []struct {
			Prefix string `json:"prefix"`
			Name   string `json:"name"`
			ID     string `json:"id"`
		} `json:"results"`
		Start int `json:"start"`
		Limit int `json:"limit"`
		Size  int `json:"size"`
		Links struct {
			Self string `json:"self"`
		} `json:"_links"`
	} `json:"labels"`
	Expandable struct {
		Currentuser string `json:"currentuser"`
		Properties  string `json:"properties"`
		Frontend    string `json:"frontend"`
		EditorHTML  string `json:"editorHtml"`
	} `json:"_expandable"`
}

//ConfluencePageSearch stores search results for checking existing pages
type ConfluencePageSearch struct {
	Results []ConfluencePage `json:"results,omitempty"`
	Start   int64            `json:"start,omitempty"`
	Limit   int64            `json:"limit,omitempty"`
	Size    int64            `json:"size,omitempty"`
}

/*
type AutoGenerated struct {
	Results []struct {
		ID       string `json:"id"`
		Type     string `json:"type"`
		Status   string `json:"status"`
		Title    string `json:"title"`

		Extensions struct {
			Position string `json:"position"`
		} `json:"extensions"`
		Links struct {
			Webui  string `json:"webui"`
			Edit   string `json:"edit"`
			Tinyui string `json:"tinyui"`
			Self   string `json:"self"`
		} `json:"_links"`
		Expandable struct {
			Container    string `json:"container"`
			Operations   string `json:"operations"`
			Children     string `json:"children"`
			Restrictions string `json:"restrictions"`
			History      string `json:"history"`
			Ancestors    string `json:"ancestors"`
			Body         string `json:"body"`
			Version      string `json:"version"`
			Descendants  string `json:"descendants"`
			Space        string `json:"space"`
		} `json:"_expandable"`
	} `json:"results"`
	Start int `json:"start"`
	Limit int `json:"limit"`
	Size  int `json:"size"`
	Links struct {
		Self    string `json:"self"`
		Next    string `json:"next"`
		Base    string `json:"base"`
		Context string `json:"context"`
	} `json:"_links"`
}
*/

type ConfluencePages struct {
	Page     ConfluencePageSearch `json:"page,omitempty"`
	BlogPost ConfluencePageSearch `json:"blogpost,omitempty"`
}

func newPage(title, spaceKey string) *ConfluencePage {
	return &ConfluencePage{
		Title: title,
		Type:  "page",
		Space: &ConfluenceSpace{Key: spaceKey},
		Body: &ConfluencePageBody{
			Storage: &ConfluencePageBodyStorage{
				Value:          "",
				Representation: "storage",
			},
		},
	}
}

type ConfluenceAttachment struct {
	Title  string            `json:"title,omitempty"`
	Type   string            `json:"type,omitempty"`
	ID     string            `json:"id,omitempty"`
	Status string            `json:"status,omitempty"`
	Links  map[string]string `json:"_links,omitempty"`
}

type ConfluenceAttachmnetSearch struct {
	Results []ConfluenceAttachment `json:"results,omitempty"`
	Start   int64                  `json:"start,omitempty"`
	Limit   int64                  `json:"limit,omitempty"`
	Size    int64                  `json:"size,omitempty"`
}
